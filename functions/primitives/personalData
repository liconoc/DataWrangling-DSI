## Lines starting with # will be ignored, so you can exclude individual functions by commenting them out. 
## Personal Data
0 addNomenclature :: [Char] -> Int -> [Char]
0 deleteNomenclature :: [Char] -> [Char]
0 deleteNomenclatureAndPunctuation :: [Char] -> [Char]
0 reduceNamesFirstPlace :: [Char] -> [Char]
0 reduceNameFirstPlace :: [Char] -> [Char]
0 reduceNameWithSurnameSecondPlace :: [Char] -> [Char]
0 reduceNameWithSurnamesSecondPlace :: [Char] -> [Char]
0 initialsNameFirstPlace :: [Char] -> [Char]
0 reduceNameSecondWord :: [Char] -> [Char] -> [Char]
0 reduceNameSecondWord :: [Char] -> [Char] -> [Char]
0 setParentheses :: [Char] -> [Char]
## NÃºmeros
0 0 :: Int
0 1 :: Int
0 2 :: Int
0 3 :: Int
0 4 :: Int
0 5 :: Int
0 6 :: Int
0 7 :: Int
0 8 :: Int
0 9 :: Int
0 10 :: Int
## Constantes
0 dash :: [Char]
0 slash :: [Char]
0 dot :: [Char]
0 comma :: [Char]
0 colon  :: [Char]
0 lBracket  :: [Char]
0 rBracket  :: [Char]
0 and :: [Char]
0 hash :: [Char]
0 lparentheses :: [Char]
0 rparentheses :: [Char]
0 space :: [Char]
## General
## 
## Strings
0 changePunctuationString :: [Char] -> [Char] -> [Char]
0 deletePunctuationString :: [Char] -> [Char]
0 deleteSomePunctuationString :: [Char] -> [Char] -> [Char]
0 splitStringByPunctuation :: [Char] -> [Char] -> [[Char]]
0 swapElementsString :: Int -> Int -> [Char] -> [Char]
0 appendPositionString :: [Char] -> [Char] -> Int -> [Char]
0 append :: [Char] -> [Char] -> [Char]
0 prepend :: [Char] -> [Char] -> [Char]
0 replacePositionString :: [Char] -> [Char] -> Int -> [Char]	
0 replaceAll :: [Char] -> [Char] -> [Char] -> [Char]
0 toLowString :: [Char] -> [Char]
0 toUpperString :: [Char] -> [Char]
0 reduceWord :: [Char] -> Int -> [Char]
0 takeOneOfArray :: [[Char]] -> Int -> [Char]
0 joinStringsWithPunctuation :: [Char] -> [Char] -> [Char] -> [Char]
0 getOneWordByPosition :: [Char] -> Int -> [Char]
0 getFirstWord :: [Char] -> [Char]
0 getLastWord :: [Char] -> [Char]
0 getOneCharacterByPosition :: [Char] -> Int -> [Char]
0 getFirstCharacter :: [Char] -> [Char]
0 getLastCharacter :: [Char] -> [Char]
0 getStartToFirstSymbolOccurrence :: [Char] -> [Char] -> [Char]
0 getStartToLastSymbolOccurrence :: [Char] -> [Char] -> [Char]
0 getLastSymbolOccurrenceToEnd :: [Char] -> [Char] -> [Char]
0 getFirstSymbolOccurrenceToEnd :: [Char] -> [Char] -> [Char]
0 joinStringsWithoutPunctuation :: [Char] -> [Char] -> [Char]
## Original
2 concat :: forall a . (->) ([[a]]) ([a])
2 toUpper :: (->) Char Char
2 toLower :: (->) Char Char
2 ord :: Char -> Int
2 lines :: [Char] -> [[Char]]
2 words :: [Char] -> [[Char]]
2 unlines :: [[Char]] -> [Char]
2 unwords :: [[Char]] -> [Char]
2 show :: Int -> [Char]